<?xml version="1.0" ?>
<sdf version="1.5">
  <model name="amr_car">
    <static>false</static>

    <link name="chassis">
      <collision name="collision">
        <geometry>
          <mesh>
            <uri>model://amr_car/meshes/chassis.stl</uri>
            <scale>0.01 0.01 0.01</scale>
          </mesh>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <mesh>
            <uri>model://amr_car/meshes/chassis.stl</uri>
            <scale>0.01 0.01 0.01</scale>
          </mesh>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Blue</name>
          </script>
        </material>
      </visual>
      <inertial>
        <mass>100</mass>
      </inertial>
    </link>
    
    <!-- wheel -->
    <link name="wheel_left">
      <collision name="collision">
        <geometry>
          <mesh>
            <uri>model://amr_car/meshes/wheel_left.stl</uri>
            <scale>0.01 0.01 0.01</scale>
          </mesh>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>0.99</mu>
              <mu2>0.9</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="visual">
        <geometry>
          <mesh>
            <uri>model://amr_car/meshes/wheel_left.stl</uri>
            <scale>0.01 0.01 0.01</scale>
          </mesh>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Black</name>
          </script>
        </material>
      </visual>
    </link>
    <link name="wheel_right">
      <collision name="collision">
        <geometry>
          <mesh>
            <uri>model://amr_car/meshes/wheel_right.stl</uri>
            <scale>0.01 0.01 0.01</scale>
          </mesh>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>0.99</mu>
              <mu2>0.9</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="visual">
        <geometry>
          <mesh>
            <uri>model://amr_car/meshes/wheel_right.stl</uri>
            <scale>0.01 0.01 0.01</scale>
          </mesh>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Black</name>
          </script>
        </material>
      </visual>
    </link>
    <joint type="revolute" name="wheel_left_hinge">
      <pose>0 0.275 0.075 0 0 0</pose>
      <child>wheel_left</child>
      <parent>chassis</parent>
      <axis>
        <xyz>0 1 0</xyz>
      </axis>
    </joint>
    <joint type="revolute" name="wheel_right_hinge">
      <pose>0 -0.275 0.075 0 0 0</pose>
      <child>wheel_right</child>
      <parent>chassis</parent>
      <axis>
        <xyz>0 1 0</xyz>
      </axis>
    </joint>
    <plugin name="wheel_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <odometrySource>world</odometrySource>
      <publishOdomTF>true</publishOdomTF>
      <publishWheelTF>false</publishWheelTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      
      <wheelAcceleration>1</wheelAcceleration>
      <wheelTorque>10</wheelTorque>
      <rosDebugLevel>na</rosDebugLevel>

      <alwaysOn>true</alwaysOn>
      <updateRate>30</updateRate>
      <leftJoint>wheel_left_hinge</leftJoint>
      <rightJoint>wheel_right_hinge</rightJoint>
      <wheelSeparation>0.55</wheelSeparation>
      <wheelDiameter>0.16</wheelDiameter>
      <torque>20</torque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_footprint</robotBaseFrame>
    </plugin>


    <!-- Lidar sick_tim551.stl-->
    <link name="sick_tim551">
      <collision name="collision">
        <geometry>
          <mesh>
            <uri>model://amr_car/meshes/sick_tim551.stl</uri>
            <scale>0.01 0.01 0.01</scale>
          </mesh>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <mesh>
            <uri>model://amr_car/meshes/sick_tim551.stl</uri>
            <scale>0.01 0.01 0.01</scale>
          </mesh>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Gray</name>
          </script>
        </material>
      </visual>
      <sensor type="ray" name="LiDAR">
        <pose>0.29 0 0.27 0 0 0</pose>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1</resolution>
              <!-- -90 ~ 90 -->
              <min_angle>-1.5707963</min_angle>
              <max_angle>1.5707963</max_angle>

              <!-- -60 ~ 60 -->
              <!-- <min_angle>-1.0472</min_angle>
              <max_angle>1.0472</max_angle> -->
            </horizontal>
          </scan>
          <range>
            <min>0.1</min>
            <max>10</max>
            <resolution>0.01</resolution>
          </range>
        </ray>
        <plugin name="laser" filename="libgazebo_ros_laser.so">
          <gaussianNoise>0.9</gaussianNoise>
          <topicName>scan</topicName>
          <!-- <frameName>base_sacn</frameName> -->
          <!-- <frameName>/amr_car/base_footprint</frameName> -->
          <frameName>laser</frameName>
          <!-- <robotBaseFrame>base_footprint</robotBaseFrame> -->
          <always_on>1</always_on>
          <update_rate>30</update_rate>
        </plugin>
        <visualize>true</visualize>
      </sensor>
    </link>
    <joint type="fixed" name="laser_joint">
      <child>sick_tim551</child>
      <parent>chassis</parent>
    </joint>

    <!-- Camera -->
    <link name="camera_front">
      <visual name="visual">
        <geometry>
          <mesh>
            <uri>model://amr_car/meshes/camera_front.stl</uri>
            <scale>0.01 0.01 0.01</scale>
          </mesh>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Black</name>
          </script>
        </material>
      </visual>
      <sensor type="camera" name="camera_front">
        <pose>0.33 0 0.13 0 0 0</pose>
        <update_rate>30.0</update_rate>
        <camera name="camera_front">
          <horizontal_fov>1.3962634</horizontal_fov>
          <image>
            <width>800</width>
            <height>600</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                That pixel's noise value is added to each of its color
                channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>camera_front</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_front_info</cameraInfoTopicName>
          <frameName>camera_front</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </link>
    <joint type="fixed" name="front_cam_joint">
      <child>camera_front</child>
      <parent>chassis</parent>
    </joint>

    <link name="camera_back">
      <collision name="collision">
        <geometry>
          <mesh>
            <uri>model://amr_car/meshes/camera_back.stl</uri>
            <scale>0.01 0.01 0.01</scale>
          </mesh>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <mesh>
            <uri>model://amr_car/meshes/camera_back.stl</uri>
            <scale>0.01 0.01 0.01</scale>
          </mesh>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Black</name>
          </script>
        </material>
      </visual>
      <sensor type="camera" name="camera_back">
        <pose>-0.33 0 0.13 0 0 3.1416</pose>
        <update_rate>30.0</update_rate>
        <camera name="camera_back">
          <horizontal_fov>1.3962634</horizontal_fov>
          <image>
            <width>800</width>
            <height>600</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                That pixel's noise value is added to each of its color
                channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>camera_back</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_back_info</cameraInfoTopicName>
          <frameName>camera_back</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </link>
    <joint type="fixed" name="camera_back_joint">
      <child>camera_back</child>
      <parent>chassis</parent>
    </joint>

    <!-- caster -->
    <link name="caster_front">
      <pose>0 0 0.0001 0 0 0 </pose>
      <collision name="collision">
        <geometry>
          <mesh>
            <uri>model://amr_car/meshes/caster_front.stl</uri>
            <scale>0.01 0.01 0.01</scale>
          </mesh>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>0.1</mu>
              <mu2>0.1</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="visual">
        <geometry>
          <mesh>
            <uri>model://amr_car/meshes/caster_front.stl</uri>
            <scale>0.01 0.01 0.01</scale>
          </mesh>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Gray</name>
          </script>
        </material>
      </visual>
    </link>
    <link name="caster_back">
      <pose>0 0 0.0001 0 0 0 </pose>
      <collision name="collision">
        <geometry>
          <mesh>
            <uri>model://amr_car/meshes/caster_back.stl</uri>
            <scale>0.01 0.01 0.01</scale>
          </mesh>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>0.1</mu>
              <mu2>0.1</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="visual">
        <geometry>
          <mesh>
            <uri>model://amr_car/meshes/caster_back.stl</uri>
            <scale>0.01 0.01 0.01</scale>
          </mesh>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Gray</name>
          </script>
        </material>
      </visual>
    </link>
    <joint type="fixed" name="caster_front_joint">
      <parent>chassis</parent>
      <child>caster_front</child>
    </joint>

    <joint type="fixed" name="caster_back_joint">
      <parent>chassis</parent>
      <child>caster_back</child>
    </joint>
  </model>
</sdf>
